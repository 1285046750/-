                             DOM

用id获取元素

getElementById（）的方法，接受一个参数：获取元素的id，如果找到相应的元素，则返回该元素的，否则返回null。       

//用变量接  在文档中找  元素 用id  “d”

		         var d = document.getElementById("p");

获取元素名

当我们使用id获取元素的时候，元素的名称会和整个元素一起显示出来，如果想要拿到该元素的元素名，也就是标签名则需要用

tagName属性，该属性只能获取，不能设置。

getElementsByTagName()：通过节点名称，查找对应节点。

var lis=document.getElementsByTagName('li');

用类名获取元素:var a = getElementsByClassName（“a”）；

 console.log（a）;

用选择器获取元素:querySelector()和querySelectorAll()可以依靠选择器找到元素,但是前者只能找到元素列表的第一个元素,而后者可以全部找到.注意,该方法性能没有直接利用标签寻找高.

        var ul = document.getElementById('ul')

   var x = document.querySelector('#div>div a');

        var lis = ul.querySelectorAll('li');

        console.log(lis);

用name属性值获取元素:getElementsByName()方法可以获取相同名称的name元素,返回一个伪数组对象.



        <input type="radio" name="sex" value="0">男 

        <input type="radio" name="sex" value="1">女    

        var sex = document.getElementsByName('sex');

        console.log(sex);

用标签名获取元素:getElementsByTagName（）可以获取该元素名称下所有的元素，返回一个伪数组，或者说是一个节点列表

           var lis = document.getElementsByName("li");

	        //伪数组

console.log(lis);

获取元素节点里的内容:当获取了元素之后，如果我们需要拿到元素中的内容（所有东西），则需要用另一种方法得到，元素里的内容可能包括：文本和元素。  

        var div = document.getElementById（"madiv"）；

        console.log（div.innerHTML）;

